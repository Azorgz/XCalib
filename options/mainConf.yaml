name_experiment: ir_reg_ours

model:
  target: 0 # idx of the target camera, must be <= Cameras_number - 1
  depth_source: 0 # idx of the depth source camera, must be <= Cameras_number - 1
  depth: zoe  #
  buffer_size: 24  # number of frames used to calibrate
  device: 0  # GPU id, -1 for CPU
  train:
    batch_size: 4 # number of samples per batch for the second stage
    shuffle: True
    frame_sampler: random  # sequential, random
    loss: [flow, image, reg]  # flow for coarse prepositioning, image for photometric fine-tuning
    epochs: 15
    unfreeze: 0.75  # epoch to unfreeze the whole parameters
    lr: 5e-3  # initial learning rate
    lr_after_unfreeze: 0.5 # multiplicative factor for lr after unfreeze
    lr_decay: 0.98  # multiplicative factor for lr decay every step

  validation:
    visualize_validation: True
    mode_fusion: alpha_blending  # alpha_blending, chessboard, cross, crossfused, ldiag, rdiag, vstrip, hstrip
    color_map_infrared: twilight  # inferno, plasma, magma, viridis, cividis, gray...
    step_visualize: 1 # Frequency of the screen update during the training (in steps)
    buffer_size: 4
    buffer_idx: [0, 29, 45, 50]  # LIST of idx of the images used for validation or null. Overrides buffer_size

data:
  name: LYNRED_DAY_full  # LYNRED_NIGHT, LYNRED_DAY, FLIR_DAY, FLIR_NIGHT, MyDataset
  nb_cam: 2
  normalize_visible: True
  normalize_infrared: True
  equalize_visible: False
  equalize_infrared: False

run_parameters:
  mode: all_in_one  # all_in_one, calibration_only, registration_only
  save_calib: False # If True, save the calibration results in a .YAML file. Overwritten if mode is calibration_only
  path_to_calib: outputs/test/test.yaml # If not null, path to a .YAML file containing calibration results. Required if mode is registration_only, ignored in mode all_in_one and calibration_only
  enhance_result_quality: True  # Module borrowed from @PGMR
output: outputs/
